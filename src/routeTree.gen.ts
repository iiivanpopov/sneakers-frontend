/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as IndexRouteImport } from './app/routes/index'

const ProfileLazyRouteImport = createFileRoute('/profile')()
const OrdersLazyRouteImport = createFileRoute('/orders')()
const OrderLazyRouteImport = createFileRoute('/order')()
const FavoredLazyRouteImport = createFileRoute('/favored')()
const DeliveriesLazyRouteImport = createFileRoute('/deliveries')()
const CatalogLazyRouteImport = createFileRoute('/catalog')()
const CartLazyRouteImport = createFileRoute('/cart')()
const AuthLazyRouteImport = createFileRoute('/auth')()
const AboutLazyRouteImport = createFileRoute('/about')()

const ProfileLazyRoute = ProfileLazyRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/profile.lazy').then((d) => d.Route))
const OrdersLazyRoute = OrdersLazyRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/orders.lazy').then((d) => d.Route))
const OrderLazyRoute = OrderLazyRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/order.lazy').then((d) => d.Route))
const FavoredLazyRoute = FavoredLazyRouteImport.update({
  id: '/favored',
  path: '/favored',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/favored.lazy').then((d) => d.Route))
const DeliveriesLazyRoute = DeliveriesLazyRouteImport.update({
  id: '/deliveries',
  path: '/deliveries',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./app/routes/deliveries.lazy').then((d) => d.Route),
)
const CatalogLazyRoute = CatalogLazyRouteImport.update({
  id: '/catalog',
  path: '/catalog',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/catalog.lazy').then((d) => d.Route))
const CartLazyRoute = CartLazyRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/cart.lazy').then((d) => d.Route))
const AuthLazyRoute = AuthLazyRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/auth.lazy').then((d) => d.Route))
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth': typeof AuthLazyRoute
  '/cart': typeof CartLazyRoute
  '/catalog': typeof CatalogLazyRoute
  '/deliveries': typeof DeliveriesLazyRoute
  '/favored': typeof FavoredLazyRoute
  '/order': typeof OrderLazyRoute
  '/orders': typeof OrdersLazyRoute
  '/profile': typeof ProfileLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth': typeof AuthLazyRoute
  '/cart': typeof CartLazyRoute
  '/catalog': typeof CatalogLazyRoute
  '/deliveries': typeof DeliveriesLazyRoute
  '/favored': typeof FavoredLazyRoute
  '/order': typeof OrderLazyRoute
  '/orders': typeof OrdersLazyRoute
  '/profile': typeof ProfileLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth': typeof AuthLazyRoute
  '/cart': typeof CartLazyRoute
  '/catalog': typeof CatalogLazyRoute
  '/deliveries': typeof DeliveriesLazyRoute
  '/favored': typeof FavoredLazyRoute
  '/order': typeof OrderLazyRoute
  '/orders': typeof OrdersLazyRoute
  '/profile': typeof ProfileLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/cart'
    | '/catalog'
    | '/deliveries'
    | '/favored'
    | '/order'
    | '/orders'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth'
    | '/cart'
    | '/catalog'
    | '/deliveries'
    | '/favored'
    | '/order'
    | '/orders'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth'
    | '/cart'
    | '/catalog'
    | '/deliveries'
    | '/favored'
    | '/order'
    | '/orders'
    | '/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthLazyRoute: typeof AuthLazyRoute
  CartLazyRoute: typeof CartLazyRoute
  CatalogLazyRoute: typeof CatalogLazyRoute
  DeliveriesLazyRoute: typeof DeliveriesLazyRoute
  FavoredLazyRoute: typeof FavoredLazyRoute
  OrderLazyRoute: typeof OrderLazyRoute
  OrdersLazyRoute: typeof OrdersLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/favored': {
      id: '/favored'
      path: '/favored'
      fullPath: '/favored'
      preLoaderRoute: typeof FavoredLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/deliveries': {
      id: '/deliveries'
      path: '/deliveries'
      fullPath: '/deliveries'
      preLoaderRoute: typeof DeliveriesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/catalog': {
      id: '/catalog'
      path: '/catalog'
      fullPath: '/catalog'
      preLoaderRoute: typeof CatalogLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthLazyRoute: AuthLazyRoute,
  CartLazyRoute: CartLazyRoute,
  CatalogLazyRoute: CatalogLazyRoute,
  DeliveriesLazyRoute: DeliveriesLazyRoute,
  FavoredLazyRoute: FavoredLazyRoute,
  OrderLazyRoute: OrderLazyRoute,
  OrdersLazyRoute: OrdersLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
